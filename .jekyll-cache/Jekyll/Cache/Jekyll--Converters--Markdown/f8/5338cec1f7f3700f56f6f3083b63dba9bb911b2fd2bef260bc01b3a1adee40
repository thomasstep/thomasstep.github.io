I"}<p>I have been updating my <a href="https://github.com/thomasstep/aws-cloudformation-reference">CloudFormation reference repo on GitHub</a> lately, and I wanted to bring up one of the newly added templates. <a href="https://github.com/thomasstep/aws-cloudformation-reference/blob/1a50e0530093920bc3068486028df1b7e97dec0c/rds/basic/rds.yml">This template</a> builds a serverless RDS instance, generates a password for that instance, adds a secret to Secrets Manager, and allows for an instance to be built off of an existing snapshot. I also took a screen capture of me building and debugging that template that is <a href="https://www.youtube.com/watch?v=-h6rKAWK6gA">available on YouTube</a> if you care to watch how I built it.</p>

<p>I’ll start by mentioning that there are conditions in this template that determine whether brand new database instances will be launched or if those instances will be based on a snapshot (<a href="https://github.com/thomasstep/aws-cloudformation-reference/blob/1a50e0530093920bc3068486028df1b7e97dec0c/rds/basic/rds.yml">I recommend looking at the template if this is confusing</a>), but I will also include the snippet that sets those conditions up.</p>
<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">Parameters</span><span class="pi">:</span>
  <span class="na">SnapshotArn</span><span class="pi">:</span>
    <span class="na">Type</span><span class="pi">:</span> <span class="s">String</span>
    <span class="na">Description</span><span class="pi">:</span> <span class="s">Snapshot to build DB off of; leave as 'none' if new DB</span>
    <span class="na">Default</span><span class="pi">:</span> <span class="s">none</span>

<span class="na">Conditions</span><span class="pi">:</span>
  <span class="na">isNewDb</span><span class="pi">:</span> <span class="kt">!Equals</span> <span class="pi">[</span><span class="kt">!Ref</span> <span class="nv">SnapshotArn</span><span class="pi">,</span> <span class="nv">none</span><span class="pi">]</span>

  <span class="na">isSnapshotDb</span><span class="pi">:</span>
    <span class="kt">!Not</span> <span class="pi">[</span><span class="kt">!Equals</span> <span class="pi">[</span><span class="kt">!Ref</span> <span class="nv">SnapshotArn</span><span class="pi">,</span> <span class="nv">none</span><span class="pi">]]</span>
</code></pre></div></div>

<p>Generating a password for the instance and adding a secret to Secrets Manager is done by the following portion of the template.</p>
<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">Credentials</span><span class="pi">:</span>
  <span class="na">Condition</span><span class="pi">:</span> <span class="s">isNewDb</span>
  <span class="na">DeletionPolicy</span><span class="pi">:</span> <span class="s">Retain</span>
  <span class="na">Type</span><span class="pi">:</span> <span class="s">AWS::SecretsManager::Secret</span>
  <span class="na">Properties</span><span class="pi">:</span>
    <span class="na">GenerateSecretString</span><span class="pi">:</span>
      <span class="na">SecretStringTemplate</span><span class="pi">:</span> <span class="s1">'</span><span class="s">{"username":</span><span class="nv"> </span><span class="s">"admin"}'</span>
      <span class="na">GenerateStringKey</span><span class="pi">:</span> <span class="s2">"</span><span class="s">password"</span>
      <span class="na">PasswordLength</span><span class="pi">:</span> <span class="m">16</span>
      <span class="na">ExcludeCharacters</span><span class="pi">:</span> <span class="s1">'</span><span class="s">"@/\'</span>
</code></pre></div></div>

<p>This is a similar snippet to what can be found in AWS references. First, I will remind you that there are conditions in this template that determine whether brand new database instances will be launched or if those instances will be based on a snapshot. If the instances are based on a snapshot, they will use the master username and password that was specified at the time of the RDS cluster’s creation. For that reason, I am retaining the secrets created with new clusters with <code class="language-plaintext highlighter-rouge">Condition: isNewDb</code> and <code class="language-plaintext highlighter-rouge">DeletionPolicy: Retain</code> in case their stacks are deleted. If the stacks are deleted, this allows a new stack to be created that will launch instances using the old database’s snapshot and credentials.</p>

<p>In actuality, the password generation is simply a randomly generated string that is later referenced by RDS to use as the password. The <code class="language-plaintext highlighter-rouge">SecretStringTemplate</code> portion is the baseline value for the secret, and the generated string is given as the value for the key with the name <code class="language-plaintext highlighter-rouge">password</code> as denoted by <code class="language-plaintext highlighter-rouge">GenerateStringKey</code>. However, this alone does not make that generated string a password. What does make it a password, is the following snippet from a property of the <code class="language-plaintext highlighter-rouge">AWS::RDS::DBCluster</code> resource definition.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">MasterUserPassword</span><span class="pi">:</span>
  <span class="kt">!If</span>
    <span class="pi">-</span> <span class="s">isNewDb</span>
    <span class="pi">-</span> <span class="kt">!Join</span>
      <span class="pi">-</span> <span class="s1">'</span><span class="s">'</span>
      <span class="pi">-</span>
        <span class="pi">-</span> <span class="s1">'</span><span class="s">{{resolve:secretsmanager:'</span>
        <span class="pi">-</span> <span class="kt">!Ref</span> <span class="s">Credentials</span>
        <span class="pi">-</span> <span class="s1">'</span><span class="s">:SecretString:password}}'</span>
    <span class="pi">-</span> <span class="kt">!Ref</span> <span class="s">AWS::NoValue</span>
</code></pre></div></div>

<p>Now we are referencing the generated string to be used as the password. The condition for <code class="language-plaintext highlighter-rouge">isNewDb</code> exists because creating an <code class="language-plaintext highlighter-rouge">AWS::RDS::DBCluster</code> resource with a snapshot requires that the master credentials properties are not present. The snapshot property in my template looks like the following snippet.</p>
<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">SnapshotIdentifier</span><span class="pi">:</span>
  <span class="kt">!If</span>
    <span class="pi">-</span> <span class="s">isSnapshotDb</span>
    <span class="pi">-</span> <span class="kt">!Ref</span> <span class="s">SnapshotArn</span>
    <span class="pi">-</span> <span class="kt">!Ref</span> <span class="s">AWS::NoValue</span>
</code></pre></div></div>

<p>This references the snapshot’s ARN if it was provided by the user. Lastly, there is an <code class="language-plaintext highlighter-rouge">AWS::SecretsManager::SecretTargetAttachment</code> resource which does some cool magic. This resource takes in the <code class="language-plaintext highlighter-rouge">AWS::RDS::DBCluster</code> and <code class="language-plaintext highlighter-rouge">AWS::SecretsManager::Secret</code> and adds the relevant database information to the secret like host, port, and engine.</p>

<p>While this template is not a full data recovery plan, it can help in a pinch by at least having everything set up to accept a snapshot and rebuild a database cluster if a stack is somehow deleted or a copy needs to be built.</p>
:ET