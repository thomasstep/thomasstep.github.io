I"∫<p>When writing Cloudformation templates, there is a way to reference a common piece of infrastructure without having to pass it in through a parameter or a hard-coded value.
That method is Exports and Imports.
I have been using these more lately because I think that they clean up my templates, and coming from a programming background, it makes sense to me to import values from other files (in this case stacks) like a variable.
Setting an Export is like defining a variable, and using an Import is like calling that variable.
If you are Exporting and Importing a piece of infrastructure‚Äôs name that may change in the future, then that means you will not have to change anything in your template as long as the Exports keep the same names.
Unfortunately, before I learned how to use Exports and Imports, I passed in references through Parameters, which did not scale well into different environments.</p>

<p>Here is a quick and dirty snippet as an example of how to use Exports (in vpc-template) and Imports (in another-template).</p>
<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">vpc-template.yml</span>
<span class="na">Resources</span><span class="pi">:</span>
  <span class="na">myVPC</span><span class="pi">:</span>
    <span class="s">.</span>
    <span class="s">.</span>
    <span class="s">.</span>

<span class="na">Outputs</span><span class="pi">:</span>
  <span class="na">VPC</span><span class="pi">:</span>
    <span class="na">Description</span><span class="pi">:</span> <span class="s">A reference to the created VPC</span>
    <span class="na">Value</span><span class="pi">:</span> <span class="kt">!Ref</span> <span class="s">myVPC</span>
    <span class="na">Export</span><span class="pi">:</span>
      <span class="na">Name</span><span class="pi">:</span> <span class="s">accountVPC</span>



<span class="s">another-template.yml</span>
<span class="na">Resources</span><span class="pi">:</span>
  <span class="na">SecurityGroup</span><span class="pi">:</span>
    <span class="na">Properties</span><span class="pi">:</span>
      <span class="s">.</span>
      <span class="s">.</span>
      <span class="s">.</span>
      <span class="s">VpcId</span><span class="pi">:</span>
        <span class="s">Fn::ImportValue:</span>
          <span class="s">accountVPC</span>
</code></pre></div></div>
<p>The <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html"><code class="language-plaintext highlighter-rouge">Outputs</code></a> block is at the top level of your template, then comes the logical name of your output, and finally the <code class="language-plaintext highlighter-rouge">Export</code> with the <code class="language-plaintext highlighter-rouge">Name</code> of what you want to export.
In order to use a reference to <code class="language-plaintext highlighter-rouge">myVPC</code> in another template you just need to import it using a <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-importvalue.html">Cloudformation intrinsic function called <code class="language-plaintext highlighter-rouge">ImportValue</code></a>.
When I was trying to figure out how to ‚Äúuse variables in Cloudformation templates‚Äù, this is what I ended up settling in on.
I find that using Exports and Imports helps a ton when you need to reference the same piece of common infrastructure in an account across multiple templates.</p>
:ET