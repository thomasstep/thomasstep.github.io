I"G<p>While working on my side project, I came across the need to have a form where some sort of text was given as input and when a button was clicked that input was captured and used in a subsequent API call. It turns out that the solution I went with was fairly easy to understand, but I wanted to make note of it either way.</p>

<p>Keep in mind that I am using Next.js/React and Material UI for this. The solutionâ€™s code is below, but I will explain it first. I used a combination of React state and event listeners to accomplish this. First comes the form components themselves, a <code class="language-plaintext highlighter-rouge">TextField</code> and <code class="language-plaintext highlighter-rouge">Button</code> from Material UI. Next comes the state needed to hold onto the input given, which I just called <code class="language-plaintext highlighter-rouge">textFieldInput</code>. The <code class="language-plaintext highlighter-rouge">TextField</code> has an <code class="language-plaintext highlighter-rouge">onChange</code> event listener which captures anything that is given as input. I wrote a handler for this to simply update the <code class="language-plaintext highlighter-rouge">textFieldInput</code> state value with whatever is in the <code class="language-plaintext highlighter-rouge">TextField</code>. Next comes the <code class="language-plaintext highlighter-rouge">onClick</code> listener for the <code class="language-plaintext highlighter-rouge">Button</code>. Whenever that is clicked, I simply pull the value of <code class="language-plaintext highlighter-rouge">textFieldInput</code> out of the state and then I can use the current value that the user typed into the <code class="language-plaintext highlighter-rouge">TextField</code>. Voila.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">FormClass</span> <span class="kd">extends</span> <span class="nx">React</span><span class="p">.</span><span class="nx">Component</span> <span class="p">{</span>
  <span class="kd">constructor</span><span class="p">(</span><span class="nx">props</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">super</span><span class="p">(</span><span class="nx">props</span><span class="p">);</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">state</span> <span class="o">=</span> <span class="p">{</span>
      <span class="na">textFieldInput</span><span class="p">:</span> <span class="dl">''</span><span class="p">,</span>
    <span class="p">};</span>

    <span class="k">this</span><span class="p">.</span><span class="nx">doSomethingWithInput</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">doSomethingWithInput</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">handleTextFieldChange</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">handleTextFieldChange</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="nx">handleTextFieldChange</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">event</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span>
      <span class="na">textFieldInput</span><span class="p">:</span> <span class="nx">event</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span>
    <span class="p">});</span>
  <span class="p">}</span>

  <span class="nx">doSomethingWithInput</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">event</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
    <span class="kd">const</span> <span class="p">{</span>
        <span class="nx">textFieldInput</span><span class="p">,</span>
      <span class="p">}</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">;</span>
    <span class="c1">// Use textFieldInput</span>
  <span class="p">}</span>

  <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span><span class="p">(</span>
      <span class="o">&lt;&gt;</span>
        <span class="o">&lt;</span><span class="nx">TextField</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">filled-basic</span><span class="dl">"</span> <span class="nx">label</span><span class="o">=</span><span class="dl">"</span><span class="s2">Email</span><span class="dl">"</span> <span class="nx">variant</span><span class="o">=</span><span class="dl">"</span><span class="s2">filled</span><span class="dl">"</span> <span class="nx">onChange</span><span class="o">=</span><span class="p">{(</span><span class="nx">e</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">handleTextFieldChange</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span> <span class="sr">/</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="nx">Button</span>
          <span class="nx">variant</span><span class="o">=</span><span class="dl">"</span><span class="s2">contained</span><span class="dl">"</span>
          <span class="nx">startIcon</span><span class="o">=</span><span class="p">{</span><span class="o">&lt;</span><span class="nx">AddIcon</span> <span class="o">/&gt;</span><span class="p">}</span>
          <span class="nx">onClick</span><span class="o">=</span><span class="p">{(</span><span class="nx">e</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">doSomethingWithInput</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span>
        <span class="sr">/</span><span class="err">&gt;
</span>      <span class="o">&lt;</span><span class="sr">/</span><span class="err">&gt;
</span>    <span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
:ET